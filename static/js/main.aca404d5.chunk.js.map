{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","step","frameSize","itemWidth","animationDuration","infinite","_useState","useState","_useState2","_slicedToArray","itemOnPage","setItemOnPage","maxItems","length","containerWidth","_jsxs","className","children","_jsx","style","width","concat","map","image","transform","transition","src","alt","type","onClick","Math","min","disabled","max","App","setStep","_useState3","_useState4","setFrameSize","_useState5","_useState6","setItemWidth","_useState7","_useState8","setAnimationDuration","_useState9","_useState10","isChecked","setIsChecked","htmlFor","onChange","event","target","value","id","checked","name","ReactDOM","render","document","getElementById"],"mappings":"mMAuFeA,EA3EmB,SAAHC,GAOxB,IANLC,EAAMD,EAANC,OACAC,EAAIF,EAAJE,KACAC,EAASH,EAATG,UACAC,EAASJ,EAATI,UACAC,EAAiBL,EAAjBK,kBACAC,EAAQN,EAARM,SAEAC,EAAoCC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAAxCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAE1BI,GAAYZ,EAAOa,OAASX,GAAaC,EAkBzCW,EAAiBZ,EAAYC,EAEnC,OACEY,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACvBC,cAAA,MACEF,UAAU,iBACVG,MAAO,CAAEC,MAAM,GAADC,OAAKP,EAAc,OAAOG,SAEvCjB,EAAOsB,KAAI,SAAAC,GAAK,OACfL,cAAA,MACEF,UAAU,mBAEVG,MAAO,CACLK,UAAU,cAADH,OAAgBX,EAAU,OACnCe,WAAW,GAADJ,OAAKjB,EAAiB,OAChCa,SAEFC,cAAA,OACEQ,IAAKH,EACLI,IAAG,GAAAN,OAAKE,GACRJ,MAAO,CAAEC,MAAM,GAADC,OAAKlB,EAAS,UATzBoB,QAeXL,cAAA,UACEU,KAAK,SACLZ,UAAU,eACVa,QA7Ce,WACnBlB,EAAcmB,KAAKC,IAAIrB,EAAaP,EAAYF,EAAM,IAEnC,IAAfS,GACFC,EAAcC,IA0CZoB,UAAWtB,EAAWO,SACvB,SAGDC,cAAA,UACEU,KAAK,SACLZ,UAAU,eACVa,QA7Ce,WACnBlB,EAAcmB,KAAKG,IAAIvB,EAAaP,EAAYF,GAAOW,IAEnDF,KAAgBE,GAAYP,GAC9BM,EAAc,IA0CZ,UAAQ,OACRqB,SAAUtB,KAAgBE,IAAaP,EAASY,SACjD,aCuCQiB,EA/GO,WACpB,IAcQlC,EAbE,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAIJM,EAAwBC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAA5BL,EAAIO,EAAA,GAAE2B,EAAO3B,EAAA,GACpB4B,EAAkC7B,mBAAS,GAAE8B,EAAA5B,YAAA2B,EAAA,GAAtClC,EAASmC,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,EAAkChC,mBAAS,KAAIiC,EAAA/B,YAAA8B,EAAA,GAAxCpC,EAASqC,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,EAAkDnC,mBAAS,KAAKoC,EAAAlC,YAAAiC,EAAA,GAAzDtC,EAAiBuC,EAAA,GAAEC,EAAoBD,EAAA,GAC9CE,EAAkCtC,oBAAS,GAAMuC,EAAArC,YAAAoC,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAM9B,OACE/B,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,MAAI,UAAQ,QAAQF,UAAU,aAAYC,SAAA,iBAAAI,OACrBrB,EAAOa,OAAM,aAElCE,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBF,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,SAAO+B,QAAQ,QAAQjC,UAAU,aAAYC,SAAC,WAG9CC,cAAA,SACEgC,SAAU,SAAAC,GAAK,OAAIV,GAAcU,EAAMC,OAAOC,QAC9CzB,KAAK,SACLZ,UAAU,aACVqC,MAAOlD,EACPmD,GAAG,aAGPvC,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,SAAO+B,QAAQ,OAAOjC,UAAU,aAAYC,SAAC,UAG7CC,cAAA,SACEgC,SAAU,SAAAC,GAAK,OAAIhB,GAASgB,EAAMC,OAAOC,QACzCzB,KAAK,SACLZ,UAAU,aACVqC,MAAOpD,EACPqD,GAAG,OACHvB,IAAK,EACLE,IAAKjC,EAAOa,YAGhBE,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,SAAO+B,QAAQ,YAAYjC,UAAU,aAAYC,SAAC,gBAGlDC,cAAA,SACEgC,SAAU,SAAAC,GAAK,OAAIb,GAAca,EAAMC,OAAOC,QAC9CzB,KAAK,SACLZ,UAAU,aACVqC,MAAOnD,EACPoD,GAAG,YACHvB,IAAK,EACLE,IAAKjC,EAAOa,YAGhBE,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,SAAO+B,QAAQ,oBAAoBjC,UAAU,aAAYC,SAAC,wBAG1DC,cAAA,SACEgC,SAAU,SAAAC,GAAK,OAAIP,GAAsBO,EAAMC,OAAOC,QACtDzB,KAAK,SACLZ,UAAU,aACVqC,MAAOjD,EACPkD,GAAG,yBAGPvC,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,SAAO+B,QAAQ,WAAWjC,UAAU,aAAYC,SAAC,aAGjDC,cAAA,SACEgC,SAnEmB,SAACC,GAC5BH,EAAaG,EAAMC,OAAOG,UAmElB3B,KAAK,WACLZ,UAAU,aACVuC,QAASR,EACTO,GAAG,IACHE,KAAK,mBAKXtC,cAACpB,EAAQ,CACPE,OAAQA,EACRG,UAAWA,EACXE,SAAU0C,EACV9C,KAAMA,EACNC,UAAWA,EACXE,kBAAmBA,QC9G3BqD,IAASC,OAAOxC,cAACgB,EAAG,IAAKyB,SAASC,eAAe,U","file":"static/js/main.aca404d5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\n type Props = {\n   images: string[],\n   step: number,\n   frameSize: number,\n   itemWidth: number,\n   animationDuration: number,\n   infinite: boolean,\n };\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [itemOnPage, setItemOnPage] = useState(0);\n\n  const maxItems = (images.length - frameSize) * itemWidth;\n\n  const getPrevImage = () => {\n    setItemOnPage(Math.min(itemOnPage + itemWidth * step, 0));\n\n    if (itemOnPage === 0) {\n      setItemOnPage(maxItems);\n    }\n  };\n\n  const getNextImage = () => {\n    setItemOnPage(Math.max(itemOnPage - itemWidth * step, -maxItems));\n\n    if (itemOnPage === -maxItems && infinite) {\n      setItemOnPage(0);\n    }\n  };\n\n  const containerWidth = frameSize * itemWidth;\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{ width: `${containerWidth}px` }}\n      >\n        {images.map(image => (\n          <li\n            className=\"Carousel_element\"\n            key={image}\n            style={{\n              transform: `translateX(${itemOnPage}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`${image}`}\n              style={{ width: `${itemWidth}px` }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"Carousel_btn\"\n        onClick={getPrevImage}\n        disabled={!itemOnPage}\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        className=\"Carousel_btn\"\n        onClick={getNextImage}\n        data-cy=\"next\"\n        disabled={itemOnPage === -maxItems && !infinite}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nconst App: React.FC = () => {\n  const initialState:State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n  const { images } = initialState;\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsChecked(event.target.checked);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\" className=\"App__title\">\n        { `Carousel with ${images.length} images`}\n      </h1>\n      <div className=\"container\">\n        <div className=\"list_item\">\n          <label htmlFor=\"width\" className=\"label_item\">\n            Width:\n          </label>\n          <input\n            onChange={event => setItemWidth(+event.target.value)}\n            type=\"number\"\n            className=\"input_item\"\n            value={itemWidth}\n            id=\"width\"\n          />\n        </div>\n        <div className=\"list_item\">\n          <label htmlFor=\"step\" className=\"label_item\">\n            Step:\n          </label>\n          <input\n            onChange={event => setStep(+event.target.value)}\n            type=\"number\"\n            className=\"input_item\"\n            value={step}\n            id=\"step\"\n            min={1}\n            max={images.length}\n          />\n        </div>\n        <div className=\"list_item\">\n          <label htmlFor=\"frameSize\" className=\"label_item\">\n            Frame Size:\n          </label>\n          <input\n            onChange={event => setFrameSize(+event.target.value)}\n            type=\"number\"\n            className=\"input_item\"\n            value={frameSize}\n            id=\"frameSize\"\n            min={1}\n            max={images.length}\n          />\n        </div>\n        <div className=\"list_item\">\n          <label htmlFor=\"animationDuration\" className=\"label_item\">\n            Animation Duration:\n          </label>\n          <input\n            onChange={event => setAnimationDuration(+event.target.value)}\n            type=\"number\"\n            className=\"input_item\"\n            value={animationDuration}\n            id=\"animationDuration\"\n          />\n        </div>\n        <div className=\"list_item\">\n          <label htmlFor=\"infinite\" className=\"label_item\">\n            Infinite\n          </label>\n          <input\n            onChange={handleCheckboxChange}\n            type=\"checkbox\"\n            className=\"input_item\"\n            checked={isChecked}\n            id=\"1\"\n            name=\"infinite\"\n          />\n        </div>\n      </div>\n\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        infinite={isChecked}\n        step={step}\n        frameSize={frameSize}\n        animationDuration={animationDuration}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}